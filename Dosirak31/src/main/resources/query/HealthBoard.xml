<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dosirak31.health.board.dao.HealthBoardDao">
	<!-- namespace는 "소속", 한 덩어리의 데이터에 이름을 붙여 충돌 가능성을 줄이고, 쉽게 참조할 수 있게 하는 개념 
		현재 파일에 정의된 SQL문 집합의 고유한 이름이다. 보통은 SQL문을 실행할 Dao 인터페이스 이름으로 설정 -->

	<sql id="boardSearch">
         <if test="search=='health_name'">
         <![CDATA[health_name like '%' || #{keyword}||'%']]>
      </if>     
      <if test="search=='health_contents'">
         <![CDATA[health_contents like '%' || #{keyword}||'%']]>
      </if>
   </sql>
	
	<!-- Workout 게시판 조회 -->

	<!-- parameterType="board" 는 "com.dosirak31.health.board.vo.HealthBoardVO" 
		이거이다.(mybatis-config 참고) -->
	<select id="healthList" parameterType="healthBoard"
		resultType="healthBoard">
		<!-- id : 사용할 명칭(필수항목) = 다오랑 같아야함, 현재 Mapper에서 유일한 이름사용. resultType : 조회 
			결과 값을 저장하기 위한 데이터 타입(데이터 하나에 대한 타입 지정) paramterType : 전달받은 파라이터 데이터 타입 지정(선택적) -->
		<![CDATA[		
		SELECT health_no, health_name, to_char(health_date, 'YYYY-MM-DD') as
		health_date, health_notify, health_closed, health_hits,
		health_contents, health_url, health_img ,health_img_name,
		health_category_no, health_update, admin_id
		from (
		   select /*+index_desc(health pk_health)*/
	        	rownum as rnum,health_no, health_name,health_date, health_notify, health_closed, health_hits,
				health_contents, health_url, health_img ,health_img_name,
				health_category_no, health_update, admin_id
	        from health
	        where ]]>
	        <trim prefix="(" suffix=") AND" prefixOverrides="AND">
              <include refid="boardSearch"></include>
           </trim>
			health_category_no = #{health_category_no} and
	        <![CDATA[rownum<=#{pageNum} *#{amount}
	    )health
	    where rnum>(#{pageNum}-1)*#{amount}
	   	]]>
	</select>
	
	<!-- 전체 레코드 수 조회 -->
	<select id="boardListCnt" parameterType="healthBoard" resultType="int">
		select count(*) from health
	</select>
	
	<!-- 웨이트 & 유산소 동영상 상세 페이지를 위한 게시물 조회 -->
	<select id="healthDetail" parameterType="healthBoard"
		resultType="healthBoard">
		SELECT health_no, health_name, to_char(health_date,
		'YYYY-MM-DD') as health_date, health_notify, health_closed,
		health_hits, health_contents, health_url, health_img ,health_img_name,
		health_category_no, health_update, admin_id
		FROM health
		WHERE health_no
		= #{health_no}
	</select>

	<!-- 게시글 조회수 -->
	<update id="healthHitUpdate" parameterType="healthBoard">
		UPDATE health
		SET
		health_hits = health_hits + 1
		WHERE health_no = #{health_no}
	</update>

	<!-- 게시물 등록 -->
	<insert id="healthBoardInsert" parameterType="healthBoard">
		<selectKey keyProperty="health_no" resultType="int"
			order="BEFORE">
			select health_seq.nextval from dual
		</selectKey>
		INSERT INTO health(health_no, health_name, health_contents,
		health_img, health_url, health_category_no)
		VALUES(#{health_no},
		#{health_name}, #{health_contents}, #{health_img}, #{health_url},
		#{health_category_no})
	</insert>

	<!-- 게시물 수정 -->
	<update id="healthBoardUpdate" parameterType="healthBoard">
		UPDATE health
		SET
		health_name = #{health_name},
		health_contents = #{health_contents},
		health_category_no = #{health_category_no},
		<!-- health_update = sysdate, -->
		health_url = #{health_url},
		health_img = #{health_img}

		WHERE health_no = #{health_no}
	</update>

	<!-- 게시물 삭제 paramerType=board도 되고 int도 됨 board의 int값이라 둘다 가능 -->
	<delete id="healthBoardDelete" parameterType="healthBoard">
		delete from health where health_no=#{health_no}
	</delete>
	
</mapper>
